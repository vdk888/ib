version: '3.8'

services:
  uncle-stock-api:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - UNCLE_STOCK_USER_ID=${UNCLE_STOCK_USER_ID}
      - IBKR_HOST=host.docker.internal
      - IBKR_PORT=${IBKR_PORT:-4002}
      - IBKR_CLIENT_ID=${IBKR_CLIENT_ID:-1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - PORTFOLIO_MAX_RANKED_STOCKS=${PORTFOLIO_MAX_RANKED_STOCKS:-30}
      - PORTFOLIO_MAX_ALLOCATION=${PORTFOLIO_MAX_ALLOCATION:-0.10}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - uncle-stock-network

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - uncle-stock-network
    profiles:
      - with-redis

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - uncle-stock-api
    restart: unless-stopped
    networks:
      - uncle-stock-network
    profiles:
      - with-proxy

networks:
  uncle-stock-network:
    driver: bridge

volumes:
  redis-data:

# Usage examples:
#
# Basic deployment:
#   docker-compose up -d
#
# With Redis caching:
#   docker-compose --profile with-redis up -d
#
# Full production setup with proxy:
#   docker-compose --profile with-redis --profile with-proxy up -d
#
# Development mode with hot reload:
#   docker-compose -f docker-compose.dev.yml up